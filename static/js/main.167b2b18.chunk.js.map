{"version":3,"sources":["selectors/NavigatorSelector.ts","containers/FrameContainer.tsx","actions/types/NavigatorActionTypes.ts","actions/NavigatorAction.ts","constants/path.ts","components/NavigatorAddressComponent.tsx","containers/NavigatorContainer.tsx","reducers/NavigatorReducer.ts","reducers/index.ts","App.tsx","index.tsx"],"names":["getState","state","navigator","getPath","createSelector","path","getIsOpen","isOpen","FrameComponent","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","responseText","url","request","XMLHttpRequest","open","onreadystatechange","readyState","DONE","status","iframeComponent","document","getElementById","src","URL","createObjectURL","response","responseType","send","requestCORS","prevProps","react","id","React","NavigatorKeys","FrameContainer","connect","updatePath","type","UPDATE_PATH","toggleOpen","TOGGLE_OPEN","initialPath","NavigatorAddressComponent","_React$Component","inputPath","onChange","bind","assertThisInitialized","onClick","onKeyPress","inherits","createClass","key","value","event","setState","target","_this2","setTimeout","charCode","ExpandIconComponent","FaAngleDoubleDown","FaAngleDoubleUp","className","fa","style","marginLeft","marginTop","NaviagtorComponent","height","undefined","NavigatorAddressComponent_NavigatorAddressComponent","NavigatorContainer","dispatch","bindActionCreators","initialNavigatorState","reducers","combineReducers","arguments","length","action","objectSpread","App","apply","es","store","createStore","applyMiddleware","thunk","FrameContainer_FrameContainer","NavigatorContainer_NavigatorContainer","ReactDOM","render","react_default","a","createElement","App_App"],"mappings":"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","file":"static/js/main.167b2b18.chunk.js","sourcesContent":["import {\n\tcreateSelector,\n} from 'reselect';\n\nimport {\n\tState,\n} from '../reducers';\n\nconst getState = (state: State) => {\n\treturn state.navigator;\n};\n\nexport const getPath = createSelector([\n\tgetState,\n], (state) => {\n\treturn state.path;\n});\n\nexport const getIsOpen = createSelector([\n\tgetState,\n], (state) => {\n\treturn state.isOpen;\n});\n","import * as React from 'react';\r\n\r\nimport {\r\n\tconnect,\r\n} from 'react-redux';\r\n\r\nimport {\r\n\tgetPath,\r\n} from '../selectors';\r\n\r\nimport {\r\n\tState,\r\n} from '../reducers';\r\n\r\nimport './FrameContainer.css';\r\n\r\ninterface ComponentProps {\r\n\tpath: ReturnType<typeof getPath>;\r\n}\r\n\r\ninterface ComponentState {\r\n\tresponseText: string;\r\n}\r\nclass FrameComponent extends React.Component<ComponentProps, ComponentState> {\r\n\tconstructor(props: ComponentProps) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tresponseText: '',\r\n\t\t};\r\n\t}\r\n\r\n\tprivate requestCORS(url: string) {\r\n\t\tconst addressForCORS = 'https://cors-anywhere.herokuapp.com/';\r\n\t\tconst request = new XMLHttpRequest();\r\n\t\trequest.open('GET', addressForCORS + url);\r\n\t\trequest.onreadystatechange = () => {\r\n\t\t\tif(request.readyState === request.DONE) {\r\n\t\t\t\tif (request.status === 200) {\r\n\t\t\t\t\tconst iframeComponent = document.getElementById('iframe') as HTMLIFrameElement;\r\n\t\t\t\t\tif(iframeComponent === null) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tiframeComponent.src = URL.createObjectURL(request.response);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\trequest.responseType = 'blob';\r\n\t\trequest.send();\r\n\t}\r\n\r\n\tpublic componentDidMount() {\r\n\t\tconst {\r\n\t\t\tpath,\r\n\t\t} = this.props;\r\n\r\n\t\tthis.requestCORS(path);\r\n\t}\r\n\r\n\tpublic componentDidUpdate(prevProps: ComponentProps) {\r\n\t\tconst {\r\n\t\t\tpath,\r\n\t\t} = this.props;\r\n\r\n\t\tif(prevProps.path !== path){\r\n\t\t\tthis.requestCORS(path);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic render() {\r\n\t\treturn (\r\n\t\t\t<iframe\r\n\t\t\t\tid={'iframe'}\r\n\t\t\t\tsrc={''}\r\n\t\t\t>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t{'Your browser does not support iframes.'}\r\n\t\t\t\t</p>\r\n\t\t\t</iframe>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nfunction mapStateToProps(state: State) {\r\n\treturn {\r\n\t\tpath: getPath(state),\r\n\t};\r\n}\r\n\r\nexport const FrameContainer = connect(mapStateToProps)(FrameComponent);\r\n","export enum NavigatorKeys {\n\tUPDATE_PATH = 'UPDATE_PATH',\n\tTOGGLE_OPEN = 'TOGGLE_OPEN',\n}\n\nexport interface UpdatePathAction {\n\ttype: NavigatorKeys.UPDATE_PATH;\n\tpath: string;\n}\n\nexport interface ToggleOpenAction {\n\ttype: NavigatorKeys.TOGGLE_OPEN;\n}\n\nexport type NavigatorAction = (\n\t| UpdatePathAction\n\t| ToggleOpenAction\n);\n","import {\n\tNavigatorKeys,\n\tUpdatePathAction,\n\tToggleOpenAction,\n} from './types';\n\nexport function updatePath(path: string): UpdatePathAction {\n\treturn {\n\t\ttype: NavigatorKeys.UPDATE_PATH,\n\t\tpath: path,\n\t};\n}\n\nexport function toggleOpen(): ToggleOpenAction {\n\treturn {\n\t\ttype: NavigatorKeys.TOGGLE_OPEN,\n\t};\n}\n","export const initialPath = 'https://naver.com';\n","import * as React from 'react';\n\nimport {\n\tFaAngleDoubleUp,\n\tFaAngleDoubleDown,\n\tFaRedoAlt,\n\tFaSearch,\n} from 'react-icons/fa';\n\nimport {\n\tupdatePath,\n\ttoggleOpen,\n} from '../actions';\n\nimport {\n\tinitialPath,\n} from '../constants/path';\n\nimport './NavigatorAddressComponent.css';\n\ninterface ComponentProps {\n\tisOpen: boolean;\n\n\tupdatePath: typeof updatePath;\n\ttoggleOpen: typeof toggleOpen;\n}\n\ninterface ComponentState {\n\tinputPath: string;\n}\n\nexport class NavigatorAddressComponent extends React.Component<ComponentProps, ComponentState> {\n\tconstructor(props: ComponentProps) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tinputPath: initialPath,\n\t\t};\n\t\tthis.onChange = this.onChange.bind(this);\n\t\tthis.onClick = this.onClick.bind(this);\n\t\tthis.onKeyPress = this.onKeyPress.bind(this);\n\t}\n\n\tprivate onChange(event: React.ChangeEvent<HTMLInputElement>) {\n\t\tthis.setState({\n\t\t\tinputPath: event.target.value,\n\t\t});\n\t}\n\n\tprivate onClick() {\n\t\tconst {\n\t\t\tinputPath,\n\t\t} = this.state;\n\t\tthis.props.updatePath('/');\n\t\tsetTimeout(() => {\n\t\t\tthis.props.updatePath(inputPath);\n\t\t}, 1);\n\t}\n\n\tprivate onKeyPress(event: React.KeyboardEvent<HTMLInputElement>) {\n\t\tif(event.charCode === 13) {\n\t\t\tthis.onClick();\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic render() {\n\t\tconst {\n\t\t\tinputPath,\n\t\t} = this.state;\n\n\t\tconst {\n\t\t\tisOpen,\n\t\t} = this.props;\n\n\t\tconst ExpandIconComponent = isOpen ? FaAngleDoubleDown : FaAngleDoubleUp;\n\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={'navigator_searchBar'}\n\t\t\t>\n\t\t\t\t<ExpandIconComponent\n\t\t\t\t\tclassName={'navigator_searchBar_icon'}\n\t\t\t\t\tonClick={this.props.toggleOpen}\n\t\t\t\t/>\n\t\t\t\t<FaRedoAlt\n\t\t\t\t\tclassName={'navigator_searchBar_icon'}\n\t\t\t\t\tonClick={this.onClick}\n\t\t\t\t/>\n\t\t\t\t<input\n\t\t\t\t\tclassName={'navigator_searchBar_input'}\n\t\t\t\t\ttype={'text'}\n\t\t\t\t\tvalue={inputPath}\n\t\t\t\t\tonChange={this.onChange}\n\t\t\t\t\tonKeyPress={this.onKeyPress}\n\t\t\t\t/>\n\t\t\t\t<div\n\t\t\t\t\tclassName={'navigator_searchBar_button'}\n\t\t\t\t\tonClick={this.onClick}\n\t\t\t\t>\n\t\t\t\t\t<FaSearch\n\t\t\t\t\t\tclassName={'navigator_searchBar_icon'}\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tmarginLeft: '4.5px',\n\t\t\t\t\t\t\tmarginTop: '2.5px',\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import * as React from 'react';\n\nimport {\n\tDispatch,\n\tAnyAction,\n\tbindActionCreators,\n} from 'redux';\n\nimport {\n\tconnect,\n} from 'react-redux';\n\nimport {\n\tupdatePath,\n\ttoggleOpen,\n} from '../actions';\n\nimport {\n\tState,\n} from '../reducers';\n\nimport {\n\tgetIsOpen,\n} from '../selectors';\n\nimport {\n\tNavigatorAddressComponent,\n} from '../components';\n\nimport './NavigatorContainer.css';\n\ninterface ComponentProps {\n\tisOpen: boolean;\n\n\tupdatePath: typeof updatePath;\n\ttoggleOpen: typeof toggleOpen;\n}\n\nclass NaviagtorComponent extends React.Component<ComponentProps> {\n\tpublic render() {\n\t\tconst {\n\t\t\tisOpen,\n\t\t} = this.props;\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={'navigator'}\n\t\t\t\tstyle={{\n\t\t\t\t\theight: isOpen ? '300px' : undefined,\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<NavigatorAddressComponent\n\t\t\t\t\t{...this.props}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nfunction mapStateToProps(state: State) {\n\treturn {\n\t\tisOpen: getIsOpen(state),\n\t};\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch<AnyAction>) {\n\treturn bindActionCreators({\n\t\tupdatePath,\n\t\ttoggleOpen,\n\t}, dispatch);\n}\n\nexport const NavigatorContainer = connect(mapStateToProps, mapDispatchToProps)(NaviagtorComponent);\n","import {\n\tNavigatorAction,\n\tNavigatorKeys,\n} from '../actions/types';\n\nimport {\n\tinitialPath,\n} from '../constants/path';\n\nexport interface NavigatorState {\n\tpath: string;\n\tisOpen: boolean;\n}\n\nconst initialNavigatorState: NavigatorState = {\n\tpath: initialPath,\n\tisOpen: true,\n};\n\nexport function navigator(state = initialNavigatorState, action: NavigatorAction) {\n\tconst {\n\t\tisOpen,\n\t} = state;\n\n\tswitch(action.type) {\n\t\tcase NavigatorKeys.UPDATE_PATH:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpath: action.path,\n\t\t\t};\n\t\tcase NavigatorKeys.TOGGLE_OPEN:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisOpen: !isOpen,\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","import {\n\tcombineReducers,\n} from 'redux';\n\nimport {\n\tNavigatorState,\n\tnavigator,\n} from './NavigatorReducer';\n\nexport interface State {\n\tnavigator: NavigatorState;\n}\n\nexport const reducers = combineReducers<State>({\n\tnavigator,\n});\n","import * as React from 'react';\n\nimport {\n\tcreateStore,\n\tapplyMiddleware,\n} from 'redux';\n\nimport {\n\tProvider,\n} from 'react-redux';\n\nimport thunk from 'redux-thunk';\n\nimport {\n\tFrameContainer,\n\tNavigatorContainer,\n} from './containers';\n\nimport {\n\treducers,\n} from './reducers';\n\nimport './App.css';\n\nexport class App extends React.Component {\n\tpublic render() {\n\t\treturn (\n\t\t\t<Provider\n\t\t\t\tstore={createStore(reducers, applyMiddleware(thunk))}\n\t\t\t>\n\t\t\t\t<div className=\"App\">\n\t\t\t\t\t<FrameContainer />\n\t\t\t\t\t<NavigatorContainer\t/>\n\t\t\t\t</div>\n\t\t\t</Provider>\n\t\t);\n\t}\n}\n","import React from 'react';\r\n\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\n\r\nimport {\r\n\tApp,\r\n} from './App';\r\n\r\nReactDOM.render(\r\n\t<App />,\r\n\tdocument.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}